<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <style>
        /* Style for Navbar */
        .navbar {
            background-color: #333;
            overflow: hidden;
        }

        .navbar a {
            float: left;
            color: white;
            text-align: center;
            padding: 14px 16px;
            text-decoration: none;
            font-size: 17px;
        }

        .navbar a:hover {
            background-color: #ddd;
            color: black;
        }

        .navbar a.active {
            background-color: #04AA6D;
            color: white;
        }

        /* Style for Announcement Cards */
        .announcement-card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            width: 100%;
            margin: 10px;
            text-align: center;
            font-family: Arial, Helvetica, sans-serif;
            background-color: #fff;
            padding: 20px;
        }

        .announcement-card h1 {
            font-size: 28px;
            color: #333;
            margin-bottom: 10px;
        }

        .announcement-card p {
            font-size: 16px;
            color: #999;
            margin-bottom: 0;
        }

        /* Style for Tutors Cards */
        .tutors-row {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            align-items: center;
        }

        .tutors-card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            width: 300px;
            margin: 10px;
            text-align: center;
            font-family: Arial, Helvetica, sans-serif;
        }

        .tutors-card img {
            width: 100%;
            height: auto;
        }

        .tutors-card h4 {
            color: #4CAF50;
        }

        .tutors-card p {
            text-align: justify;
            margin: 10px;
            color: gray;
        }
    </style>
</head>

<body>
    <div class="navbar">
        <a class="active" href="#" id="home-link">Home</a>
        <a href="#" id="ads-link">Ads</a>
        <a href="#" id="reviews-link">Reviews</a>
        <a href="#" id="resources-link">Resources</a>
        <a href="#" id="announcements-link">Announcements</a>
        {{!-- <a href="#" id="settings-link">Settings</a> --}}
        <a href="/frontend/pages/settings.hbs">Settings</a>
    </div>

    <!-- Content -->
    <div class="container">
        <h1 style="text-align: center;"></h1>
        <div class="tutors-row" id="tutors-data"></div>
    </div>

    <div class="container">
        <h1 style="text-align: center;"></h1>
        <div class="tutors-row" id="announcement-data"></div>
    </div>

    {{!-- <div id="content"></div> --}}   

</body>

<script>
    const navbarLinks = document.querySelectorAll(".navbar a");

    window.onload = function () {
        displayHomePage();
    }


    navbarLinks.forEach(link => {
        link.addEventListener("click", event => {
            event.preventDefault();

            const page = event.target.textContent;

            if (page === "Home") {
                displayHomePage();
            } else if (page === "Ads") {
                displayAdsPage();
            } else if (page === "Reviews") {
                displayReviewsPage();
            } else if (page === "Resources") {
                displayResourcesPage();
            } else if (page === "Announcements") {
                displayAnnouncementsPage();
            }
            else if (page === "Settings") {
                displaySettingsPage();
            } 

            // Push state to browser history
            window.history.pushState({}, page, `/${page.toLowerCase()}`);
        });
    });

    window.addEventListener('popstate', () => {
        if (!window.history.state) {
            displayHomePage();
        }
    });

    function displayHomePage() {
        document.getElementById("announcement-data").innerHTML = "";

        document.getElementById("tutors-data").innerHTML = `
            <div class="container">
                <h1 style="text-align: center;">Welcome Admin</h1>
                <p>ha bhai chal raha hy home</p>
                <div class="tutors-row" id="tutors-data"></div>
            </div>
        `;
    }


    ///////////////////
    function displayAdsPage() {
        fetch('/ads')
            .then(response => response.json())
            .then(data => {
                let html = ``;
                data.forEach((ad, index) => {
                    html += `
                <div class="tutors-card">
                    <img src="${ad.image}" alt="${ad.subject} - ${ad.class}">
                    <h4>${ad.time}</h4>
                    <p>${ad.subject} - ${ad.class}</p>
                    <p>${ad.price}</p>
                    <form onsubmit="try { removeAd('${ad._id}'); } catch(err) { console.error(err); } return false;">
                        <button type="submit" style="padding: 5px;margin-bottom:5px">Remove Ad</button>
                    </form>
                </div>`;
                    if (index % 3 === 2 || index === data.length - 1) {
                        html += '</div><div class="tutors-row">';
                    }
                });
                document.getElementById("tutors-data").innerHTML = html;
            })
            .catch(err => console.error(err));
    }


    function removeAd(adId) {
        fetch('/deleteads', {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ _id: adId })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                displayAdsPage();
                console.log('Ad deleted successfully');
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });
    }

    ///////



    function displayReviewsPage() {
        // Add code to display reviews page here
    }

    function displayResourcesPage() {
        // Add code to display resources page here
    }

    function displayAnnouncementsPage() {
        document.getElementById("tutors-data").innerHTML = "";  // setting html other than announcements to null
        fetch("/viewann")
            .then((response) => response.json())
            .then((data) => {
                let html = `
            <button id="add-announcement-button" onclick="displayPopup()">Add Announcement</button>
            `;
                for (let i = 0; i < data.announcements.length; i++) {
                    html += `
          <div class="announcement-card">
            <h1>${data.announcements[i].content}</h1>
            <p>${data.announcements[i].createdAt}</p>
            <br>
            <button onclick="deleteAnnouncement('${data.announcements[i]._id}')">Delete announcement</button>
          </div>`;
                }
                document.getElementById("announcement-data").innerHTML = html;
            })
            .catch((err) => {
                // Display an error message if the request fails
                console.log("failure");
            });
    }

    function displayPopup() {
        // disable the "Add Announcement" button
        const addAnnouncementButton = document.getElementById("add-announcement-button");
        addAnnouncementButton.disabled = true;

        // create the pop-up dialog
        const popup = document.createElement("div");
        popup.classList.add("popup");

        // create the input field
        const input = document.createElement("input");
        input.type = "text";
        input.placeholder = "Enter your announcement here...";
        input.required = true; // add required attribute
        popup.appendChild(input);

        // create the submit button
        const button = document.createElement("button");
        button.textContent = "Submit";
        button.onclick = () => {
            const content = input.value.trim();
            if (content.length === 0) {
                // if the announcement is empty or whitespace-only, show an error message
                const error = document.createElement("p");
                error.textContent = "Announcement cannot be empty.";
                error.classList.add("error-message");
                popup.appendChild(error);
                return;
            }
            saveAnnouncement(content);
            popup.remove();
            addAnnouncementButton.disabled = false; // enable the "Add Announcement" button
        };
        popup.appendChild(button);

        // add the pop-up dialog to the page
        const announcementsDiv = document.getElementById("announcement-data");
        announcementsDiv.insertBefore(popup, announcementsDiv.firstChild);
    }


        function saveAnnouncement(content) {
            // send a POST request to the backend to save the new announcement
            fetch("/addann", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ contentt: content })
            })
                .then((response) => response.json())
                .then((data) => {
                    // refresh the announcements list
                    displayAnnouncementsPage();
                })
                .catch((err) => {
                    // Display an error message if the request fails
                    console.log("failure");
                });
        }




    function deleteAnnouncement(id) {
        fetch("/deleteann", {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ _id: id }),
        })
            .then((response) => response.text())
            .then((data) => {
                console.log(data);
                displayAnnouncementsPage(); // refresh the list of announcements after successful deletion
            })
            .catch((err) => {
                // Display an error message if the request fails
                console.log("failure");
            });
    }







    function displaySettingsPage() {
      window.location.href = "/settings";
        }


  

</script>
