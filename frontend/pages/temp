<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <style>
        /* Style for Navbar */
        .navbar {
            background-color: #333;
            overflow: hidden;
        }

        .navbar a {
            float: left;
            color: white;
            text-align: center;
            padding: 14px 16px;
            text-decoration: none;
            font-size: 17px;
        }

        .navbar a:hover {
            background-color: #ddd;
            color: black;
        }

        .navbar a.active {
            background-color: #04AA6D;
            color: white;
        }

        /* Style for Announcement Cards */
        .announcement-card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            width: 100%;
            margin: 10px;
            text-align: center;
            font-family: Arial, Helvetica, sans-serif;
            background-color: #fff;
            padding: 20px;
        }

        .announcement-card h1 {
            font-size: 28px;
            color: #333;
            margin-bottom: 10px;
        }

        .announcement-card p {
            font-size: 16px;
            color: #999;
            margin-bottom: 0;
        }

        /* Style for Tutors Cards */
        .tutors-row {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            align-items: center;
        }

        .tutors-card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            width: 300px;
            margin: 10px;
            text-align: center;
            font-family: Arial, Helvetica, sans-serif;
        }

        .tutors-card img {
            width: 100%;
            height: auto;
        }

        .tutors-card h4 {
            color: #4CAF50;
        }

        .tutors-card p {
            text-align: justify;
            margin: 10px;
            color: gray;
        }

        .card {
            width: calc(33.33% - 40px);
            margin: 20px;
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            transition: 0.3s;
        }

        .card:hover {
            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
        }

        .card img {
            width: 100%;
            height: auto;
        }

        .card p {
            margin: 10px;
            font-size: 18px;
            text-align: center;
        }

        .tutors-header {
            margin-bottom: 20px;
            text-align: center;
            font-size: 28px;
            font-weight: bold;
        }

        .tutors-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            align-items: center;
        }

        .tutors-card {
            width: calc(33.33% - 40px);
            margin: 20px;
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            transition: 0.3s;
        }

        .tutors-card:hover {
            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
        }

        .tutors-card img {
            width: 100%;
            height: auto;
        }

        .tutors-card p {
            margin: 10px;
            font-size: 18px;
            text-align: center;
        }
    </style>
</head>
home postad viewMyAds appointments requests reviews settings
<body>
    <div class="navbar">
        <a class="active" href="#" id="home-link">Home</a>
        <a href="#" id="ads-link">Post an Ad</a>
        <a href="#" id="reviews-link">View My Ads</a>
        <a href="#" id="reviews-link">My Appointments</a>
        <a href="#" id="resources-link">Requests</a>
        <a href="#" id="announcements-link">View Announcements</a>
        <a href="#" id="announcements-link">View my reviews</a>
        {{!-- <a href="#" id="settings-link">Settings</a> --}}
        <a href="/frontend/pages/settings.hbs">Settings</a>
    </div>

    <!-- Content -->
    <div class="search-container" style="text-align: center;margin: top 5px;">
        <input type="text" id="search-input" placeholder="Search...">
        <button id="search-button">Search</button>
    </div>

    <div id="ad-form-container"></div>

    <div class="container">
        <h1 class="tutors-header"></h1>
        <div class="tutors-container" id="tutors-data">
            <!-- tutors data will be displayed here -->
        </div>

        <div class="container">
            <h1 style="text-align: center;"></h1>
            <div class="tutors-row" id="tutors-data"></div>
        </div>

        <div class="container">
            <h1 style="text-align: center;"></h1>
            <div class="tutors-row" id="announcement-data"></div>
        </div>

        {{!-- <div id="content"></div> --}}

</body>

<script>
    const navbarLinks = document.querySelectorAll(".navbar a");

    window.onload = function () {
        displayHomePage();
    }

    navbarLinks.forEach(link => {
        link.addEventListener("click", event => {
            event.preventDefault();

            const page = event.target.textContent;

            if (page === "Home") {
                displayHomePage();
            } 
            if (page === "View Announcements") {
                displayAnnouncementsPage();
            }
            if (page ==="Post an Ad") {
                showAdForm();
            }

            // Push state to browser history
            window.history.pushState({}, page, `/${page.toLowerCase()}`);
        });
    });

    window.addEventListener('popstate', () => {
        if (window.history.state) {
            displayHomePage();
        }
        else {
            displayHomePage();
        }
    });

    function displayHomePage() {
        // To hide the div with class "search-container"
        document.getElementById("ad-form-container").innerHTML = "";
        document.querySelector('.search-container').style.display = 'none';

        document.getElementById("announcement-data").innerHTML = "";

        document.getElementById("tutors-data").innerHTML = `
            <div class="container">
                <h1 style="text-align: center;">Welcome Tutor</h1>
                <p>ha bhai yeh bchal raha hy home</p>
                <div class="tutors-row" id="tutors-data"></div>
            </div>
        `;
    }


    ///////////////////
    const displayAds = () => {
        document.getElementById("ad-form-container").innerHTML = "";
        displayHomePage();
        document.querySelector('.search-container').style.display = 'block';
        fetch('/ads')
            .then(response => response.json())
            .then(data => {
                let html = "";
                data.forEach((ad, index) => {
                    html += `
            <div class="tutors-card">
              <img src="${ad.image}" alt="${ad.subject} - ${ad.class}">
              <h4 style="text-align: center;">${ad.time}</h4>
              <p>${ad.subject} - ${ad.class}</p>
              <p>${ad.price}</p>
              <button>Book an appointment</button>
              <button>View Reviews</button>
            </div>
          `;
                    if (index % 3 === 2 || index === data.length - 1) {
                        html += '</div>';
                    }
                });
                document.getElementById("tutors-data").innerHTML = html;
            })
            .catch(err => console.error(err));
    };

    // Call the displayAds function to initially display all ads


    // Add event listener to search button
    document.getElementById("search-button").addEventListener("click", () => {
        // To show the div with class "search-container"


        const searchQuery = document.getElementById("search-input").value.toLowerCase();
        fetch(`/search?q=${searchQuery}`)
            .then(response => response.json())
            .then(data => {
                let html = "";
                data.forEach((ad, index) => {
                    html += `
            <div class="tutors-card">
              <img src="${ad.image}" alt="${ad.subject} - ${ad.class}">
              <h4 style="text-align: center;">${ad.time}</h4>
              <p>${ad.subject} - ${ad.class}</p>
              <p>${ad.price}</p>
            </div>
          `;
                    if (index % 3 === 2 || index === data.length - 1) {
                        html += '</div>';
                    }
                });
                document.getElementById("tutors-data").innerHTML = html;
                // Add the current search query to the browser history
                history.pushState({ searchQuery }, null, `/search?q=${searchQuery}`);
            })
            .catch(err => console.error(err));
    });

    // Add event listener to popstate event (back/forward buttons)

 function showAdForm() {
        // Remove the contents of the tutors and announcement containers
        document.getElementById("tutors-data").innerHTML = "";
        document.getElementById("announcement-data").innerHTML = "";

        // Clear the ad form container
        document.getElementById("ad-form-container").innerHTML = "";

        // Create the form elements
        const form = document.createElement("form");
        form.id = "ad-form";
        form.style.marginTop = "20px";
        form.style.textAlign = "center";

        const nameDiv = document.createElement("div");
        const nameLabel = document.createElement("label");
        nameLabel.textContent = "Enter Your User Name: ";
        const nameInput = document.createElement("input");
        nameInput.type = "text";
        nameInput.name = "name";
        nameDiv.appendChild(nameLabel);
        nameDiv.appendChild(nameInput);

        const subjectsDiv = document.createElement("div");
        const subjectsLabel = document.createElement("label");
        subjectsLabel.textContent = "Enter Subjects: ";
        const subjectsInput = document.createElement("input");
        subjectsInput.type = "text";
        subjectsInput.name = "subject";
        subjectsDiv.appendChild(subjectsLabel);
        subjectsDiv.appendChild(subjectsInput);

        const gradeDiv = document.createElement("div");
        const gradeLabel = document.createElement("label");
        gradeLabel.textContent = "Enter Grade: ";
        const gradeInput = document.createElement("input");
        gradeInput.type = "text";
        gradeInput.name = "class";
        gradeDiv.appendChild(gradeLabel);
        gradeDiv.appendChild(gradeInput);

        const costDiv = document.createElement("div");
        const costLabel = document.createElement("label");
        costLabel.textContent = "Enter Cost: ";
        const costInput = document.createElement("input");
        costInput.type = "text";
        costInput.name = "price";
        costDiv.appendChild(costLabel);
        costDiv.appendChild(costInput);

        const imageDiv = document.createElement("div");
        const imageLabel = document.createElement("label");
        imageLabel.textContent = "Enter Image Link: ";
        const imageInput = document.createElement("input");
        imageInput.type = "text";
        imageInput.name = "image";
        imageDiv.appendChild(imageLabel);
        imageDiv.appendChild(imageInput);

        const submitButton = document.createElement("button");
        submitButton.type = "submit";
        submitButton.textContent = "Submit";

        // Add a submit event listener to the form
        form.addEventListener("submit", async (event) => {
            event.preventDefault(); // Prevent the default form submission behavior

            // Check if the entered username exists
            const username = nameInput.value;
            const tutorResponse = await fetch(`/tutor/${username}`);
            if (tutorResponse.status === 404) {
                alert("Username not found. Ad cannot be posted.");
                return;
            }

            // Send a POST request to the server to post the ad
            const adResponse = await fetch("/postad", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    subject: subjectsInput.value,
                    class: gradeInput.value,
                    time: nameInput.value,
                    price: costInput.value,
                    image: imageInput.value,
                }),
            });

            // Get the response data and display it to the user
            const responseData = await adResponse.json();
            alert(responseData);
        });

        form.appendChild(nameDiv);
        form.appendChild(subjectsDiv);
        form.appendChild(gradeDiv);
     form.appendChild(costDiv);
     form.appendChild(imageDiv);
     form.appendChild(submitButton);

     document.getElementById("ad-form-container").appendChild(form);

     // Add a submit event listener to the form
     form.addEventListener("submit", async (event) => {
         event.preventDefault(); // Prevent the default form submission behavior

         // Check if the entered username exists
         const username = nameInput.value;
         const tutorResponse = await fetch(`/tutor/${username}`);
         if (tutorResponse.status === 404) {
             alert("Username not found. Ad cannot be posted.");
             return;
         }

         // Send a POST request to the server to post the ad
         const adResponse = await fetch("/postad", {
             method: "POST",
             headers: {
                 "Content-Type": "application/json",
             },
             body: JSON.stringify({
                 subject: subjectsInput.value,
                 class: gradeInput.value,
                 time: nameInput.value,
                 price: costInput.value,
                 image: imageInput.value,
             }),
         });

         // Get the response data and display it to the user
         const responseData = await adResponse.json();
         alert(responseData);
     });
 }
 // Add a submit event listener to the form
    const onSubmit = async (event) => {
        event.preventDefault(); // Prevent the default form submission behavior

        // Check if the entered username exists
        const username = nameInput.value;
        const tutorResponse = await fetch(`/tutor/${username}`);
        if (tutorResponse.status === 404) {
            alert("Username not found. Ad cannot be posted.");
            form.removeEventListener("submit", onSubmit); // Remove the event listener
            return;
        }

        // Send a POST request to the server to post the ad
        const adResponse = await fetch("/postad", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                subject: subjectsInput.value,
                class: gradeInput.value,
                time: nameInput.value,
                price: costInput.value,
                image: imageInput.value,
            }),
        });

        // Get the response data and display it to the user
        const responseData = await adResponse.json();
        alert(responseData);
    };

    form.addEventListener("submit", onSubmit);


    function displayReviewsPage() {
        // Add code to display reviews page here
    }

    function displayResourcesPage() {
        // Add code to display resources page here
    }

    function displayDeleteReview() {

    }

    function displayAnnouncementsPage() {
         document.getElementById("ad-form-container").innerHTML = "";
        document.querySelector('.search-container').style.display = 'none';
        document.getElementById("tutors-data").innerHTML = "";  // setting html other than announcements to null
        fetch("/viewann")
            .then((response) => response.json())
            .then((data) => {
                let html = `
         
            `;
                for (let i = 0; i < data.announcements.length; i++) {
                    html += `
          <div class="announcement-card">
            <h1>${data.announcements[i].content}</h1>
            <p>${data.announcements[i].createdAt}</p>
            <br>
          
          </div>`;
                }
                document.getElementById("announcement-data").innerHTML = html;
            })
            .catch((err) => {
                // Display an error message if the request fails
                console.log("failure");
            });
    }

    function displaySettingsPage() {
        window.location.href = "/settings";
    }
    // Define a global variable to store the name of the last executed function
    let lastFunctionName = 'displayHomePage';

    // Update the pushState function to store the name of the current function in the history state object
    window.history.pushState({ functionName: lastFunctionName }, page, `/${page.toLowerCase()}`);

    // Add code to the popstate event listener to execute the last executed function again
    window.addEventListener('popstate', (event) => {
        displayHomePage();
    }
    );

</script>